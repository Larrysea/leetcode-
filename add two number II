原题地址：  https://leetcode.com/problems/add-two-numbers-ii/
分类：      链表
题目名称：  对两个逆序链表进行相加

题目描述：  

题目要求：  

解题思路：
因为链表遍历和加法的顺序是反的，所以我们如果要正向相加需要按照加法的正常顺序来相加，所以需要对链表的顺序进行一次逆转，这个使用栈来做，然后就是从尾部到头部来构建链表即可。


解法1 ：


public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> stack1 = new Stack();
        Stack<Integer> stack2 = new Stack();

        ListNode p1 = l1;
        ListNode p2 = l2;
        ListNode head = new ListNode(0);
        while(p1 != null)
        {
            stack1.push(p1.val);
            p1 = p1.next;
        }
        while(p2 != null)
        {
            stack2.push(p2.val);
            p2 = p2.next;
        }
        int sum = 0;
        while(p1 != null || p2 != null){
              int a = stack1.pop();
              int b = stack2.pop();
              sum = a + b + head.val;
              head.val = sum % 10;
              ListNode curNode = new ListNode(sum / 10);
              curNode.next = head;
              head = curNode;
           
              p1 = p1.next;
              p2 = p2.next;
        } 

        return head;
}