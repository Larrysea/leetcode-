原题地址：https://leetcode.com/problems/contains-duplicate-ii/submissions/
分类：     hashset 双指针
题目名称：  contains-duplicate-ii

题目描述： 在两个 j - i <= k 的范围内是否存在 nums[i] == nums[j] 的情况。

题目要求： 

解题思路：  

思路一： 

就是窗口问题，在窗口长度最大为k 的范围判断下个字符是否是在set 中，如果不在，则移动窗口，然后接着判断。



解法1 ：


    public static boolean containsNearbyDuplicate(int[] nums, int k) {
        if (nums.length < 2) {
            return false;
        }

        Set<Integer> numberSet = new HashSet();
        int left = 0;
        int right = nums.length - 1 >= k ? k : 1;
        for (int i = 0; i < right; i++) {
            numberSet.add(nums[i]);
        }
        while (right < nums.length) {
            if (numberSet.contains(nums[right])) {
                return true;
            } else {
                numberSet.add(nums[right]);
                numberSet.remove(nums[left]);
                if (k < nums.length) {
                    left++;
                }
            }
            right++;
        }

        return false;
    }



     public static boolean containsNearbyDuplicate(int[] nums, int k) {
            Set<Integer> numberset = new HashSet();
            if (int i = 0;i < nums.length;i++){
               if (numberSet.contains(nums[i])){
                   return true;
               }
               numberSet.add(nums[i]);
               if (numberSet.size() > k + 1){
                   numberSet.remove(nums[i - k]);
               }
            }
        return false;
    }

















