原题地址：https://leetcode.com/problems/minimum-size-subarray-sum/submissions/
分类： 数组
题目名称：最短子数组

题目描述： 计算数组中和大于等于target 的最短子数组
题目要求： 
解题思路： 

思路一： 暴力解法，尝试所有加的和，然后比较出最小子数组
思路二： 当大于该值得时候从头部开始删除，删除到小于sum，然后继续前进。


解法一：

public int minSubArrayLen(int s, int[] nums) {
      int sum;
      int count = Integer.MAX_VALUE;
      //存在重复计算
      for (int i = 0;i < nums.length;i++)
      {
          sum = nums[i];
          for (int j = i + 1;j < nums.length;j++)
          {
               if (sum == s){
                   if(count < j - i + 1)
                   {
                       count = j - i + 1;
                   }
                   break;
               }

               if (sum < s)
               {
                 sum += num[j];
               }
               //大于target 则进行清零 
               else 
               {  
                  sum = 0;
                  break;
               } 
          }

      }
      if (count != Integer.MAX_VALUE)
      {
          return count;
      }

      return 0;

 }

解法二 ：

public static int minSubArrayLen(int s, int[] nums) {
        int sum = 0;
        int count = Integer.MAX_VALUE;
        int j = 0;
        //尝试增加
        for (int i = 0; i < nums.length; i++) {
            sum += nums[i];
            //当已经超重时，开始减肥到阈值，然后再开始
            while (sum >= s) {
                if (count > i - j + 1) {
                    count = i - j + 1;
                }
                sum -= nums[j++];
            }
        }
        if (count != Integer.MAX_VALUE) {
            return count;
        }
        return 0;
    }

