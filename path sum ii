原题地址：  https://leetcode.com/problems/path-sum-ii/
        
分类：     树

题目描述：  
题目要求：   
解题思路： 

思路一：  计算出一棵树的所有子树的遍历路径,dfs 来求解。

解法1 ：  



   public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> result = new ArrayList();
        if (root == null) {
            return result;
        }
        List<Integer> sonResult = new ArrayList();
        dfs(root, 0, sum, sonResult, result);
        return result;
    }

    private void dfs(TreeNode root, int currentSum, int sum, List<Integer> result, List<List<Integer>> rs) {

        result.add(root.val);
        currentSum += root.val;
        if (root.left == null && root.right == null) {
            if (currentSum == sum) {
                rs.add(new ArrayList(result));
            }
        }

        if (root.left != null) {
            dfs(root.left, currentSum, sum, result, rs);
        }
        if (root.right != null) {
            dfs(root.right, currentSum, sum, result, rs);
        }

        result.remove(result.size() - 1);
    }