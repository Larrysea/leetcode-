原题地址： https://leetcode.com/problems/rotate-array/

分类： 数组

题目描述： 数组旋转

题目要求： 题目要求O(1) 空间复杂度。

解题思路： 这道题叫数组旋转，但是换个思路其实不是旋转，是数组插入，定义好有多少个数组要插入，然后后续数组移位的一个操作。

思路一：
1  从倒数第k个数插入到数组第一位，然后将数组整体后移到倒数第k个数，然后执行倒数k - 1个位置在插入到第二位，然后再整体后移。
主要考察数组的移动操作。
注意点：
数组操作注意越界的判断，例如有i - 1 后者i + 1，需要先检查确保在数组范围内。


class Solution {

    public void rotate(int[] nums, int k) {
       int leftIndex = 0;       
       int rightIndex = nums.length - 1;
       int lastNumber = 0;
       if(k > nums.length){
          k = k % nums.length;
       }
       for (int i = nums.length - k;i < nums.length && i>= 0;i++){
          lastNumber = nums[i];
          for (int j = i;j > leftIndex;j--){
              nums[j] = nums[j - 1];
          }
          nums[leftIndex++] = lastNumber;
       }       
    }
}


